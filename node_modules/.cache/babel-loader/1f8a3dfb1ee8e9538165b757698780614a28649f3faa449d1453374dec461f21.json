{"ast":null,"code":"var _jsxFileName = \"/Users/sherry.elgarhy/travel-search/src/ListingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [listing, setListing] = useState(null);\n  useEffect(() => {\n    fetchListing();\n  }, []);\n  const fetchListing = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/listings/${id}`);\n      setListing(response.data);\n    } catch (error) {\n      console.error('Error fetching listing:', error);\n    }\n  };\n  if (!listing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    title,\n    images,\n    description,\n    amenities,\n    location,\n    host\n  } = listing;\n  const randomPhotos = getRandomPhotos(images.data, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4\",\n      children: randomPhotos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.url,\n        alt: `Image ${index + 1}`,\n        className: \"w-full h-auto\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: host.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: host.avatar,\n        alt: \"Host\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Amenities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: amenities.data.map(amenity => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: amenity.title\n        }, amenity.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: location.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: location.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: location.country.code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: location.zip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n// Function to get random photos from the images array\n_s(ListingPage, \"HXxg5oOFvANfddDNwcW75WCJ85w=\", false, function () {\n  return [useParams];\n});\n_c = ListingPage;\nconst getRandomPhotos = (photos, count) => {\n  const shuffled = photos.sort(() => 0.5 - Math.random()); // Shuffle the photos array\n  return shuffled.slice(0, count); // Get the first `count` photos\n};\n\nexport default ListingPage;\nvar _c;\n$RefreshReg$(_c, \"ListingPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ListingPage","_s","id","listing","setListing","fetchListing","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","images","description","amenities","location","host","randomPhotos","getRandomPhotos","className","map","photo","index","src","url","alt","name","avatar","amenity","address","city","country","code","zip","_c","photos","count","shuffled","sort","Math","random","slice","$RefreshReg$"],"sources":["/Users/sherry.elgarhy/travel-search/src/ListingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ListingPage() {\n  const { id } = useParams();\n  const [listing, setListing] = useState(null);\n\n  useEffect(() => {\n    fetchListing();\n  }, []);\n\n  const fetchListing = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/listings/${id}`);\n      setListing(response.data);\n    } catch (error) {\n      console.error('Error fetching listing:', error);\n    }\n  };\n\n  if (!listing) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, images, description, amenities, location, host } = listing;\n  const randomPhotos = getRandomPhotos(images.data, 5);\n\n  return (\n    <div>\n      <h1>{title}</h1>\n\n      <div className=\"grid grid-cols-3 gap-4\">\n        {/* Render random photos */}\n        {randomPhotos.map((photo, index) => (\n          <img key={index} src={photo.url} alt={`Image ${index + 1}`} className=\"w-full h-auto\" />\n        ))}\n      </div>\n\n      <div>\n        {/* Render host */}\n        <h2>{host.name}</h2>\n        <img src={host.avatar} alt=\"Host\" />\n      </div>\n\n      <div>\n        {/* Render description */}\n        <h3>Description</h3>\n        <p>{description}</p>\n      </div>\n\n      <div>\n        {/* Render amenities */}\n        <h3>Amenities</h3>\n        <ul>\n          {amenities.data.map((amenity) => (\n            <li key={amenity.id}>{amenity.title}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        {/* Render location */}\n        <h3>Location</h3>\n        <p>{location.address}</p>\n        <p>{location.city}</p>\n        <p>{location.country.code}</p>\n        <p>{location.zip}</p>\n      </div>\n    </div>\n  );\n}\n\n// Function to get random photos from the images array\nconst getRandomPhotos = (photos, count) => {\n  const shuffled = photos.sort(() => 0.5 - Math.random()); // Shuffle the photos array\n  return shuffled.slice(0, count); // Get the first `count` photos\n};\n\nexport default ListingPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}